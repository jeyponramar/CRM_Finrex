using System;
using System.Data;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using WebComponent;
using System.Collections;

/// <summary>
/// Summary description for Stock
/// </summary>
public enum StockModule
{
    Delivery=1,
    DeliveryReturn=2,
    StockIn=3,
    StockOut=4
}
public enum PurchaseStatus
{
    Open=1,
    PartiallyReceived=2,
    Received=3
}
public class Stock
{
    public static void SaveStock(int mid,string code, string date,  string submodule, StockModule stockModule)
    {
        string module = Common.GetModuleName();
        string query = "delete from tbl_stock WHERE stock_module='" + module + "' AND stock_mid=" + mid;
        DbTable.ExecuteQuery(query);
        query = "select * from tbl_" + submodule + " WHERE " + submodule + "_" + module + "id=" + mid;
        DataTable dttbl = DbTable.ExecuteSelect(query);
        bool isStockIn = false;
        if (stockModule == StockModule.DeliveryReturn)
        {
            isStockIn = true;
        }
        else if (stockModule == StockModule.StockIn)
        {
            isStockIn = true;
        }
        for (int i = 0; i < dttbl.Rows.Count; i++)
        {
            int productId = GlobalUtilities.ConvertToInt(dttbl.Rows[i][submodule+"_productid"]);
            int quantity = GlobalUtilities.ConvertToInt(dttbl.Rows[i][submodule + "_quantity"]);
            int inQty = 0;
            int outQty = 0;
            if (isStockIn)
            {
                inQty = quantity;
            }
            else
            {
                outQty = quantity;
            }
            Hashtable hstbl = new Hashtable();
            hstbl.Add("date", date);
            hstbl.Add("referenceno", code);
            hstbl.Add("productid", productId);
            hstbl.Add("inquantity", inQty);
            hstbl.Add("outquantity", outQty);
            hstbl.Add("module", module);
            hstbl.Add("mid", mid);
            hstbl.Add("stocktype", stockModule.ToString());
            InsertUpdate obj = new InsertUpdate();
            int stockId = obj.InsertData(hstbl, "tbl_stock");

        }
    }
    public static void UpdatePurchaseStockInQty(int purchaseId)
    {
        DataRow drPurchase = DbTable.GetOneRow("tbl_purchaseorder", purchaseId);
        int totalQty = GlobalUtilities.ConvertToInt(drPurchase["purchaseorder_totalquantity"]);
        string query = "select SUM(ISNULL(stockin_totalquantity,0)) AS totalStockIN FROM tbl_stockin "+
                       "WHERE stockin_purchaseorderid="+purchaseId;
        DataRow drStockIn = DbTable.ExecuteSelectRow(query);
        int totalInQty = 0;
        if (drStockIn != null)
        {
            totalInQty = GlobalUtilities.ConvertToInt(drStockIn["totalStockIN"]);
        }
        int balanceQty = totalQty - totalInQty;
        PurchaseStatus purchaseStatus = PurchaseStatus.Open;
        if (totalInQty == totalQty)
        {
            purchaseStatus = PurchaseStatus.Received;
        }
        else if (totalInQty == 0)
        {
            purchaseStatus = PurchaseStatus.Open;
        }
        else
        {
            purchaseStatus = PurchaseStatus.PartiallyReceived;
        }
        query = "update tbl_purchaseorder set purchaseorder_receivedquantity=" + totalInQty + ",purchaseorder_purchasestatusid=" + Convert.ToInt16(purchaseStatus) +
                " WHERE purchaseorder_purchaseorderid=" + purchaseId;
        bool issuccess = DbTable.ExecuteQuery(query);
    }
    public static void SaveSerialNo(string module, string subModule, int id, string clientName, int engineerId, string date, string inout, string referenceNo, string remarks)
    {
        string parentModule = Common.GetModuleName();
        string query = "delete from tbl_serialno WHERE serialno_m='" + parentModule + "' AND serialno_mid=" + id;
        DbTable.ExecuteQuery(query);

        query = "select * from tbl_" + subModule + " WHERE " + subModule + "_" + parentModule + "id=" + id;
        DataTable dttbl = DbTable.ExecuteSelect(query);
        for (int i = 0; i < dttbl.Rows.Count; i++)
        {
            string serialno = GlobalUtilities.ConvertToString(dttbl.Rows[i][subModule + "_serialno"]);
            int productId = GlobalUtilities.ConvertToInt(dttbl.Rows[i][subModule + "_productid"]);
            SaveSerialNoDetail(id, serialno, clientName, engineerId, productId, date, module, inout, referenceNo, remarks);
        }
    }
    public static void SaveSerialNoDetail(int mid, string serialno, string clientName, int engineerId, int productId, string date, string module, string inout, string referenceNo, string remarks)
    {
        string m = Common.GetModuleName();
        
        Array arr = serialno.Split(',');
        for (int i = 0; i < arr.Length; i++)
        {
            string sn = Convert.ToString(arr.GetValue(i));
            if (sn != "")
            {
                Hashtable hstbl = new Hashtable();
                hstbl.Add("m", m);
                hstbl.Add("mid", mid);
                hstbl.Add("serialno", sn);
                hstbl.Add("productid", productId);
                hstbl.Add("date", date);
                hstbl.Add("module", module);
                hstbl.Add("inout", inout);
                hstbl.Add("referenceno", referenceNo);
                hstbl.Add("remarks", remarks);
                hstbl.Add("clientname", clientName);
                hstbl.Add("employeeid", engineerId);
                InsertUpdate obj = new InsertUpdate();
                obj.InsertData(hstbl, "tbl_serialno");
            }
        }
    }
}
