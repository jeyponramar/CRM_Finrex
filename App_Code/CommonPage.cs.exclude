using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Text;
using System.Collections;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using WebComponent;
using System.Xml;

/// <summary>
/// Summary description for CommonPage
/// </summary>
public static class CommonPage
{
    public static void CloseQuickAddEditWindow(Page page, PlaceHolder form, int id)
    {
        //if (HttpContext.Current.Request.QueryString["qe"] == "1" || HttpContext.Current.Request.QueryString["qa"] == "1")
        //{
        //    if (HttpContext.Current.Request.QueryString["qe"] == "1")
        //    {
        //        CloseQuickEditWindow(page, form);
        //    }
        //    else if (HttpContext.Current.Request.QueryString["qa"] == "1")
        //    {
        //        CloseQuickAddWindow(page, form, id);
        //    }
        //}
        //else
        //{
        //    int isadd = 0;
        //    string closeTabScript = "";
        //    if (HttpContext.Current.Request.QueryString["id"] == null)
        //    {
        //        isadd = 1;
        //    }
        //    else
        //    {
        //        closeTabScript = "alert('Data saved successfully!');parent.closeTab();";
        //    }
        //    string script = "";
        //    string data = GetFormData(form);
            
        //    data = "m~" + Common.GetModuleName() + "~isadd~" + isadd + "~id~" + id + data;
        //    script = "<script>$(document).ready(function(){shareViewData('" + data + "');" + closeTabScript + "});</script>";
        //    page.ClientScript.RegisterClientScriptBlock(typeof(Page), "closeSaveTab", script);
        //    if (HttpContext.Current.Request.QueryString["id"] == null)
        //    {
        //        GlobalData gblData = new GlobalData();
        //        gblData.ResetForm(form);
        //    }
        //}
        if (HttpContext.Current.Request.QueryString["qa"] == "1")
        {
            CloseQuickAddWindow(page, form, id);
        }
        else
        {
            int isadd = 0;
            string closeTabScript = "";
            string script = "";
            string data = GetFormData(form);

            data = "m~" + Common.GetModuleName() + "~isadd~" + isadd + "~id~" + id + data;
            if (HttpContext.Current.Request.QueryString["id"] == null)
            {
                isadd = 1;
            }
            else
            {
                closeTabScript = "alert('Data saved successfully!');parent.closeTab('" + GlobalUtilities.ConvertToInt(HttpContext.Current.Request.QueryString["tab"]) + "');";
            }
            
            if (HttpContext.Current.Request.QueryString["qe"] == "1")
            {
                script = "<script>$(document).ready(function(){parent.shareQeData('" + data + "');});</script>";
                page.ClientScript.RegisterClientScriptBlock(typeof(Page), "closeQEWindow", script);
            }
            else
            {
                script = "<script>$(document).ready(function(){shareViewData('" + data + "');" + closeTabScript + "});</script>";
                page.ClientScript.RegisterClientScriptBlock(typeof(Page), "closeSaveTab", script);
                if (HttpContext.Current.Request.QueryString["id"] == null)
                {
                    GlobalData gblData = new GlobalData();
                    gblData.ResetForm(form);
                }
            }
        }
        
    }
    private static string GetFormData(PlaceHolder form)
    {
        StringBuilder data = new StringBuilder();
        ArrayList arrControls = new ArrayList();
        GlobalUtilities.GetControls(form, arrControls);

        for (int i = 0; i < arrControls.Count; i++)
        {
            Control ctrl = (Control)arrControls[i];
            if (ctrl is TextBox)
            {
                TextBox txt = (TextBox)ctrl;
                string dcn = GlobalUtilities.ConvertToString(txt.Attributes["dcn"]);

                if (dcn != "" && txt.TextMode == TextBoxMode.SingleLine)
                {
                    data.Append("~" + dcn + "~" + txt.Text);
                }
            }
            if (ctrl is DropDownList)
            {
                DropDownList ddl = (DropDownList)ctrl;
                if (ddl.SelectedIndex > 0)
                {
                    string m = GlobalUtilities.ConvertToString(ddl.Attributes["m"]);
                    string cn = GlobalUtilities.ConvertToString(ddl.Attributes["cn"]);
                    if (m != "" && cn != "")
                    {
                        string dcn = m + "_" + cn;
                        if (dcn != "")
                        {
                            data.Append("~" + dcn + "~" + ddl.SelectedItem.Text);
                        }
                    }
                }
                else
                {
                    string m = GlobalUtilities.ConvertToString(ddl.Attributes["m"]);
                    string cn = GlobalUtilities.ConvertToString(ddl.Attributes["cn"]);
                    if (m != "" && cn != "")
                    {
                        string dcn = m + "_" + cn;
                        if (dcn != "")
                        {
                            if (ddl.CssClass.Contains("ddlqa"))
                            {
                                data.Append("~" + dcn + "~" + HttpContext.Current.Request.Form[ddl.ClientID + "_txtddlqa"]);
                            }
                        }
                    }
                }
            }
        }
        return data.ToString();
    }
    private static void CloseQuickAddWindow(Page page, PlaceHolder form, int id)
    {
        string dcn = HttpContext.Current.Request.QueryString["dcn"];
        string targettxt = HttpContext.Current.Request.QueryString["targettxt"];
        string targethdn = HttpContext.Current.Request.QueryString["targethdn"];
        Array arr = dcn.Split('_');
        string m = GlobalUtilities.ConvertToString(arr.GetValue(0));
        string column = GlobalUtilities.ConvertToString(arr.GetValue(1));
        string txtvalue = "";
        if (targethdn == "undefined")//set value for dropdown
        {
            txtvalue = ((TextBox)form.FindControl("txt" + HttpContext.Current.Request.QueryString["cn"])).Text;
        }
        else
        {
            txtvalue = ((TextBox)form.FindControl("txt" + column)).Text;
        }

        string script = "<script>$(document).ready(function(){closeQuickAdd('" + targettxt + "','" + targethdn + "','" + txtvalue + "','" + id + "');});</script>";
        page.ClientScript.RegisterClientScriptBlock(typeof(Page), "closeQuickEdit", script);
    }
    private static void CloseQuickEditWindow(Page page, PlaceHolder form)
    {
        string cols = HttpContext.Current.Request.QueryString["vc"];
        if (cols == "") return;
        Array arrCols = cols.Split(',');
        StringBuilder viewData = new StringBuilder();
        ArrayList arrControls = new ArrayList();
        GlobalUtilities.GetControls(form, arrControls);
        for (int i = 0; i < arrCols.Length; i++)
        {
            string columnName = GlobalUtilities.ConvertToString(arrCols.GetValue(i));
            string val = "";
            if (columnName != "undefined" && columnName != "")
            {
                for (int j = 0; j < arrControls.Count; j++)
                {
                    Control ctrl = (Control)arrControls[j];
                    if (ctrl is TextBox)
                    {
                        TextBox txt = ((TextBox)ctrl);
                        string id = txt.ID;
                        if (txt.Attributes["dcn"] == columnName)
                        {
                            val = txt.Text;
                            break;
                        }
                    }
                    else if (ctrl is DropDownList)
                    {
                        DropDownList ddl = ((DropDownList)ctrl);
                        if (ddl.Attributes["dcn"] == columnName)
                        {
                            val = ddl.SelectedItem.Text;
                            if (val.Trim().ToLower() == "select") val = "";
                            break;
                        }
                    }
                    else if (ctrl is CheckBox)
                    {
                        CheckBox chk = (CheckBox)ctrl;
                        if (chk.Attributes["dcn"] == columnName)
                        {
                            if (chk.Checked)
                            {
                                val = "Yes";
                            }
                            else
                            {
                                val = "No";
                            }
                            break;
                        }
                    }
                }

            }
            val = val.Replace("'", "&quot;");
            if (viewData.ToString() == "")
            {
                viewData.Append(columnName + "`" + val);
            }
            else
            {
                viewData.Append("~" + columnName + "`" + val);
            }
        }
        string strViewData = viewData.ToString();
        strViewData = strViewData.Replace("\r\n", "_NEWLINE_");
        string script = "<script>$(document).ready(function(){parent.closeQuickEdit('" + strViewData + "');});</script>";
        page.ClientScript.RegisterClientScriptBlock(typeof(Page), "closeQuickEdit", script);
    }
    public static void DisableOnQuickAddEdit(Button btnSaveAndView)
    {
        if (AppConstants.IsMobile)
        {
            btnSaveAndView.Visible = false;
            return;
        }
        if (HttpContext.Current.Request.QueryString["qe"] != null || HttpContext.Current.Request.QueryString["qa"] != null)
        {
            btnSaveAndView.Visible = false;
        }
    }
    public static void PopulateAcOnAdd(TextBox txtAcId, TextBox txtAcName, string queryStringId)
    {
        int id = GlobalUtilities.ConvertToInt(HttpContext.Current.Request.QueryString[queryStringId]);
        string m = txtAcName.Attributes["m"];
        string dcn = txtAcName.Attributes["dcn"];
        string idcolumn = m + "_" + m + "id";
        string query = "select * from tbl_" + m + " where " + idcolumn + "=" + id;
        DataRow dr = DbTable.ExecuteSelectRow(query);
        if (dr == null) return;
        txtAcName.Text = GlobalUtilities.ConvertToString(dr[dcn]);
        txtAcId.Text = GlobalUtilities.ConvertToString(dr[idcolumn]);
    }
    public static DataRow PopulateOnAdd(PlaceHolder form, string queryStringColumn)
    {
        int id = Common.GetQueryStringValue(queryStringColumn);
        if (id == 0) return null;
        string moduleName = Common.GetModuleName();
        string xmlPath = HttpContext.Current.Server.MapPath("~/xml/add/" + moduleName + ".xml");
        XmlDocument doc = new XmlDocument();
        doc.Load(xmlPath);
        string popModule = queryStringColumn;
        if (popModule.EndsWith("id")) popModule = popModule.Substring(0, popModule.Length - 2);
        XmlNode xmlPopulateOnAdd = doc.SelectSingleNode("/setting/populateonadd/" + popModule + "/query");
        if (xmlPopulateOnAdd == null) return null;
        string query = xmlPopulateOnAdd.InnerText.Replace("&lt;", "<").Replace("&gt;", ">");
        
        query += " WHERE " + popModule + "_" + popModule + "id=" + id;
        DataRow dr = DbTable.ExecuteSelectRow(query);
        GlobalData gblData = new GlobalData();
        gblData.PopulateForm(dr, form);
        return dr;
    }
    public static void SetPageTitle(Page page, Label lblPageTitle, string Title)
    {
        string pageTitle = Title;
        string url = HttpContext.Current.Request.Url.ToString().ToLower();
        if (url.Contains("view.aspx")) pageTitle = "View " + pageTitle;
        if (url.Contains("add.aspx") && HttpContext.Current.Request.QueryString["id"] == null)
        {
            pageTitle = "Add " + pageTitle;
        }
        else if (url.Contains("add.aspx") && HttpContext.Current.Request.QueryString["id"] != null)
        {
            pageTitle = "Edit " + pageTitle;
        }
        if (lblPageTitle != null)
        {
            lblPageTitle.Text = pageTitle;
        }
        if (AppConstants.IsMobile)
        {
            lblPageTitle = (Label)page.Master.FindControl("lblPageTitle");
        }
        else
        {
            page.ClientScript.RegisterClientScriptBlock(typeof(Page), "title", "<script>setTitle('" + pageTitle + "')</script>");
        }
        lblPageTitle.Text = pageTitle;
    }
}
